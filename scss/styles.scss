// Imports
@import "partials/clearfix";
@import "partials/reset";
@import "partials/general_styles";


// 1. Many small items in a grid

.block.small-grid.small-grid-flexbox {

  ul{
    display: flex;
    flex-flow: row wrap;
    max-width: 400px;
    height: 400px;
    align-items: stretch;
    justify-content: center;
    margin: auto;

    li{
      flex: 1 0 10%;
      box-sizing: border-box;
      line-height: 40px;
      text-align: center;
    }
  }
}



// 2. 2-Column Grid


$breakpoints: (
  'medium': 500px,
  'large':  800px
) !default;

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media only screen and (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

.block.two-col-grid.two-col-grid-flexbox {
  background-color: orange;
  display: flex;
  flex-flow: row wrap;

  .column-1 {
    // flex: 1 0 50%;
    order: 1;

    @include respond-to('medium') {
      flex: 1 0 40%;
    }
  }

  .column-2 {

    // flex: 1 0 50%;

      flex: 1 1 auto;
    @include respond-to('medium') {
    }
  }
}





// 3. Centering



// 4. Ordering
